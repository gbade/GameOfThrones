// <auto-generated />
using System;
using System.Collections.Generic;
using GameOfThrones.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GameOfThrones.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240731164122_CreateCharactersTable")]
    partial class CreateCharactersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameOfThrones.Domain.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ActorLink")
                        .HasColumnType("text");

                    b.Property<string>("ActorName")
                        .HasColumnType("text");

                    b.Property<string>("CharacterImageFull")
                        .HasColumnType("text");

                    b.Property<string>("CharacterImageThumb")
                        .HasColumnType("text");

                    b.Property<string>("CharacterLink")
                        .HasColumnType("text");

                    b.Property<string>("CharacterName")
                        .HasColumnType("text");

                    b.Property<string>("HouseName")
                        .HasColumnType("text");

                    b.Property<List<string>>("Killed")
                        .HasColumnType("text[]");

                    b.Property<List<string>>("KilledBy")
                        .HasColumnType("text[]");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.Property<List<string>>("Parents")
                        .HasColumnType("text[]");

                    b.Property<bool?>("Royal")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("Siblings")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("Character", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
